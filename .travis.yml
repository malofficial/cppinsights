language: cpp
sudo: false

common_sources: &all_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-trusty

matrix:
  include:

    # 1/ OSX Builds
    - env: COMPILER='/Users/travis/build/andreasfertig/cppinsights/clang/current/bin/clang++' COMPILER_CC='/Users/travis/build/andreasfertig/cppinsights/clang/current/bin/clang' LLVM_CONFIG='/Users/travis/build/andreasfertig/cppinsights/clang/current/bin/llvm-config'  COVERAGE='No'
      os: osx
      osx_image: xcode9.3
      compiler: clang
      
    # 2/ Linux Clang Builds
    - os: linux
      compiler: clang
      addons:
          apt:
              sources: *all_sources
              packages: ['clang-7', 'libstdc++-6-dev', 'llvm-7-dev', 'libclang-7-dev', 'zlib1g-dev']
      env: COMPILER='clang++-7' COMPILER_CC='clang-7' LLVM_CONFIG='/usr/bin/llvm-config-7'  COVERAGE='No'

    # 3/ Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: &gcc8
        apt:
          sources: *all_sources
          packages: ['g++-8', 'clang-7', 'libstdc++-6-dev', 'llvm-7-dev', 'libclang-7-dev', 'zlib1g-dev']
      env: COMPILER='g++-8' COMPILER_CC='gcc-8' LLVM_CONFIG='/usr/bin/llvm-config-7' COVERAGE='No'

    # 3/ Linux Clang Coverage Builds
    - os: linux
      compiler: gcc
      addons: &gcc8
        apt:
          sources: *all_sources
          packages: ['g++-7', 'clang-7', 'libstdc++-6-dev', 'llvm-7-dev', 'libclang-7-dev', 'zlib1g-dev', 'lcov']
      env: COMPILER='g++-7' COMPILER_CC='gcc-7' LLVM_CONFIG='/usr/bin/llvm-config-7' COVERAGE='Yes'
    
    # 4/ Coverity Builds
    - os: linux
      compiler: clang
      addons:           
           apt:
              sources: *all_sources
              packages: ['clang-7', 'libstdc++-6-dev', 'llvm-7-dev', 'libclang-7-dev', 'zlib1g-dev']

           coverity_scan:
               # GitHub project metadata
               project:
               name: andreasfertig/cppinsights
               version: 0.1
               description: C++ Insights

               # Where email notification of build analysis results will be sent
               #notification_email: scan_notifications@example.com

               # Commands to prepare for build_command
               build_command_prepend: cmake -DINSIGHTS_LLVM_CONFIG=${LLVM_CONFIG} -DINSIGHTS_COVERAGE=${COVERAGE}  .

               # The command that will be added as an argument to "cov-build" to compile your project for analysis,
               build_command: make

               # Pattern to match selecting branches that will run analysis. We recommend leaving this set to 'coverity_scan'.
               # Take care in resource usage, and consider the build frequency allowances per
               #   https://scan.coverity.com/faq#frequency
               branch_pattern: coverity_scan          
               
               
      env: COMPILER='clang++-7' COMPILER_CC='clang-7' LLVM_CONFIG='/usr/bin/llvm-config-7' COVERAGE='No'
          global:
        - secure: "o69Y/rLqNHK8dzh4FQmiFoEZOF4vwqb8HcUQcl7kVKLh9mfaFtRPbrolvcRDZ7kHgUYfHi2lhNDuiQWXXQTyjPYgxm9DEWnxP8VAxQ5FIY/aqtCTSFNOzwLX6YO+698SblafMKZVSDgimZy3lvQAqcI+ZMaPvr9wDFsQDKWr6btkq/IX8JTQeBZDPDHiU0/hMACGXjn+jqGULxU9ROyKAlLx4Sd7fo9wMdb/3fA6Bwd9MkZZpo5Eqpkur2RsaYi7QCFx2fhAXZbn6it9o0pF28hs7AL87BlYDzHwlcso+/8ifiCnHaqCtlzeMSfw4hwdtU7lHdbNc6MeCpqN4YknP3PYyUbgVirRdYEs2b3WUjLg+Ks9y3DX+fKkNq58hYCC25xvDsrrquXdFcCaaLHbsYnBgloekMYls2UCUB4dDt1w13/AvobXpa8o2ADa44LmQQoUW0d6PGTnS+n6X1Cvs/T3QpRIyjHPBiL8bZbDACo3OvstKN7DP9gAmPiSHdQV1jg/jxzzPK0sYd4Y92DKc5jSe7pmAh+WK9FeCqAjt6HCGZaNrTmA6oePMRF9g8w2t9kpiFZOV3SIpAQ+EwZWYx6Jsa6fZPRxYCQdO/gCGJ5s3YlsX2J9QfrOJ+2OqKEjgwm2Hmn+O5hXrMPuOVaXDn4beSiSkB/q0X0LtUpOg2g="
      
before_install:
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

install:
  - ${TRAVIS_BUILD_DIR}/scripts/travis_install.sh
    
before_script:
  - export CXX=${COMPILER}
  - export CC=${COMPILER_CC}
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build
  - cd build
  - cmake -DINSIGHTS_LLVM_CONFIG=${LLVM_CONFIG} -DINSIGHTS_COVERAGE=${COVERAGE}  ..

script:
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make -j 2; fi
  - ${TRAVIS_BUILD_DIR}/scripts/travis_tests.sh

after_success:
  - ${TRAVIS_BUILD_DIR}/scripts/travis_coverage.sh

